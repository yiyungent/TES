@using Framework.HtmlHelpers
@using WebUI.Areas.Admin.Models.Common
@using WebUI.Areas.Admin.Models.EvaResultVM
@using WebUI.Extensions
@using Domain
@model EvaResultListViewModel
@{
	Layout = "~/Areas/Admin/Views/Shared/_AdminContent.cshtml";
	IList<NormType> allNormType = ViewBag.AllNormType;
	IList<int> allNormTypeId = allNormType.Select(m => m.ID).ToList();
}
@section head {
	<style>
		table tr td {
			vertical-align: middle !important;
		}
	</style>
}
@section body {
	<script src="~/dist/pview/pview.js"></script>
	<script>
		function showMessage(message, type) {
			$("#js-message").fadeIn();
			switch (type) {
				case -1:
					$("#js-message").attr("class", "alert alert-danger").find(".message").html(message);
					break;
				case 1:
					$("#js-message").attr("class", "alert alert-success").find(".message").html(message);
					break;
			}
			// 3s 后隐藏
			setTimeout(function () {
				$("#js-message").fadeOut("slow");
			}, 3000);
		}

		// start 删除
		function deleteOp(id) {
			$("#js-id").val(id);
			$('#deleteModal').modal();
		}

		function deleteSubmit() {
			var id = $("#js-id").val();
			$.ajax({
				type: 'POST',
				url: '/Admin/EvaResult/Delete',
				data: { id: id },
				dataType: 'json',
				success: function (data) {
					if (data.code <= 0) {
						// 删除失败
						showMessage(data.message, -1);
					} else {
						// 删除成功
						showMessage(data.message, 1);
						$(".table").find("tr[data-tr-id='" + id + "']").remove();
						// 检查当前当前页面是否已经全部删除完，若是，则点击当前页码，重新加载
						var trNum = $(".table").find("tr").length - 1;
						if (trNum == 0) {
							$("#js-page").find("li[class*='active']>a")[0].click();
						}
					}
				}
			});
		}
		// end 删除

		// start 计算分数
		function caculateScore() {
			$("#js-btn-caculate").html("计算中").attr("disabled", "disabled");
			// 新计算分数, 实际上就是根据 评价记录创建对应的评价结果
			var selectedEvaTaskId = $('#SelectedValForEvaTask').val();
			var selectedTeacherId = $('#SelectedValForTeacher').val();
			var selectedEvaTypeId = $('#SelectedValForEvaType').val();
			$.ajax({
				url: "/Admin/EvaResult/CaculateScore",
				type: "post",
				data: { evaTaskId: selectedEvaTaskId, teacherId: selectedTeacherId, evaTypeId: selectedEvaTypeId },
				dataType: "json",
				success: function (data) {
					$("#js-btn-caculate").html("计算分数").removeAttr("disabled");
					if (data.code > 0) {
						// 计算成功
						window.location.href = window.location.href;
					} else {
						showMessage(data.message, -1);
					}
				}
			});
		}

		function reCaculateScore(id, obj) {
			$(obj).html("计算中").attr("disabled", "disabled");
			// 重新计算
			$.ajax({
				url: "/Admin/EvaResult/ReCaculateScore",
				type: "post",
				data: { id: id },
				dataType: "json",
				success: function (data) {
					$(obj).html("重新计算分数").removeAttr("disabled");
					if (data.code > 0) {
						// 计算成功
						window.location.href = window.location.href;
					} else {
						showMessage(data.message, -1);
					}
				}
			});
		}
		// end 计算分数

		// start 搜索
		function search() {
			var query = $('#js-search-input').val();
			var queryType = $('#js-search-type').attr('search-type');
			window.location.href = window.location.origin + window.location.pathname + '?q=' + query + '&type=' + queryType;
		}
		// end 搜索

		var pview;
		$(function () {
			pview = new PView();
			pview.init();

			// start 搜索
			$('#js-search-input').on('keypress', function (event) {
				if (event.keyCode == "13") {
					search();
				}
			});
			$('#js-search-btn').on('click', function () {
				search();
			});
			$('#js-search-type-list li').on('click', function () {
				var type = $(this).attr('search-type');
				var typeName = $(this).find('a').html();
				$('#js-search-type').attr('search-type', type);
				$('#js-search-type').html(typeName);
			});
			// end 搜索
		});
	</script>
	@if (TempData["message"] != null)
	{
		<script>
			showMessage('@TempData["message"].ToString()', 1);
		</script>
	}
}
@helper GenerateScoreDesc(EvaResultVMItem currentVMItem, IList<int> allNormTypeId)
{
	foreach (var typeId in allNormTypeId)
	{
		// 当前分数明细 有哪些 评价类型 的分数
		IList<int> current_ScoreDic_NormType_idList = currentVMItem.ScoreDic.Keys.Select(m => m.ID).ToList();
		// 有此 评价类型的 (明细)分数
		if (current_ScoreDic_NormType_idList.Contains(typeId))
		{
			// 此 评价类型 的 分数
			<td>@(currentVMItem.ScoreDic.Where(m => m.Key.ID == typeId).FirstOrDefault().Value)</td>
		}
		else
		{
			<td>无相关评价记录</td>
		}
	}
}

<!-- start 删除确认框 -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
				<h4 class="modal-title">确认框</h4>
			</div>
			<div class="modal-body">
				<form>
					<div class="form-group">
						<label for="message-text" class="control-label">确定要删除？</label>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">返回</button>
				<button onclick="deleteSubmit()" type="button" class="btn btn-primary" data-dismiss="modal">确认</button>
			</div>
		</div>
	</div>
</div>
<!-- end 删除确认框 -->
<!-- start 提示框 -->
@{ Html.RenderPartial("_MessagePartial"); }
<!-- end 提示框 -->

<input id="js-id" type="hidden" />

<!-- start .box -->
<div class="box">
	<!-- start .box-header -->
	<div class="box-header">
		<h3 class="box-title">列表</h3>

		<div class="box-tools">
			<div class="input-group input-group-sm" style="width: 250px;">
				<div class="input-group-btn">
					<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
						<span id="js-search-type" search-type="@(ViewBag.QueryType.Val)">@(ViewBag.QueryType.Text)</span>
						<span class="fa fa-caret-down"></span>
					</button>
					<ul id="js-search-type-list" class="dropdown-menu">
						<li search-type="teachername"><a href="javascript:;">教师名</a></li>
						<li search-type="evatypename"><a href="javascript:;">评价类型名</a></li>
						<li search-type="evataskname"><a href="javascript:;">评价任务名</a></li>
						<li search-type="score"><a href="javascript:;">分数</a></li>
						<li search-type="id"><a href="javascript:;">ID</a></li>
					</ul>
				</div>
				<input id="js-search-input" type="text" name="table_search" class="form-control pull-right" placeholder="Search" value="@ViewBag.Query">
				<div class="input-group-btn">
					<button id="js-search-btn" type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
				</div>
			</div>
		</div>
	</div>
	<!-- end .box-header -->
	<!-- start .box-body -->
	<!-- start 简单表格 -->
	<div class="box-body table-responsive no-padding">
		<table id="js-table" class="table table-hover" pview="table">
			<tr>
				@*<th>ID</th>*@
				<th>评价任务</th>
				<th>被评教师（员工）</th>
				@foreach (var item in allNormType)
				{
					<th>@item.Name</th>
				}
				<th>总分</th>
				<th>操作</th>
			</tr>
			@foreach (var item in Model.List)
			{
				<tr data-tr-id="">
					@*<td>@item.ID</td>*@
					<td>
						<span class="label label-info">@item.EvaTask.Name</span>
					</td>
					<td>@item.EvaedEmployee.Name（@item.EvaedEmployee.EmployeeCode）</td>
					@GenerateScoreDesc(item, allNormTypeId)
					<td>@item.ScoreSum</td>
					@*<td>
							<div class="btn-group" role="group" data-pjax>
								@if (Html.HasAuth("Admin", "EvaResult", "ReCaculateScore"))
								{
									<button class="btn btn-success" onclick="reCaculateScore(@item.ID, this)">重新计算分数</button>
								}
								@if (Html.HasAuth("Admin", "EvaResult", "Delete"))
								{
									<button class="btn btn-danger" onclick="deleteOp(@item.ID)">删除</button>
								}
							</div>
						</td>*@
				</tr>
			}
		</table>
	</div>
	<!-- end 简单表格 -->
	<!-- end .box-body -->
	<!-- start .box-footer -->
	<div class="box-footer clearfix">
		<div class="col-xs-6">
			<div class="row">
				<div class="col-xs-3">
					<label for="SelectedValForTeacher">评价任务</label>
					@Html.DropDownList("SelectedValForEvaTask", (IList<SelectListItem>)ViewBag.SelectListForEvaTask, new { @class = "form-control" })
				</div>
				<div class="col-xs-3">
					<div class="form-group">
						<label for="SelectedValForTeacher">教师</label>
						@Html.DropDownList("SelectedValForTeacher", (IList<SelectListItem>)ViewBag.SelectListForTeacher, new { @class = "form-control" })
					</div>
				</div>
				<div class="col-xs-3">
					<div class="form-group">
						<label for="SelectedValForTeacher">评价类型</label>
						@Html.DropDownList("SelectedValForEvaType", (IList<SelectListItem>)ViewBag.SelectListForEvaType, new { @class = "form-control" })
					</div>
				</div>
				<div class="col-xs-3" style="padding-top: 24px;">
					@if (Html.HasAuth("Admin", "EvaResult", "CaculateScore"))
					{
						<button id="js-btn-caculate" class="btn btn-primary" onclick="caculateScore()">计算分数</button>
					}
				</div>
			</div>
		</div>
		<!-- start 分页 -->
		@*<div id="js-page" pview="pages">
				<ul class="pagination pull-right" pview-btn-group pview-targets="table,pages">
					@Html.PageLinks(Model.PageInfo, i => Url.Action("Index", new { pageIndex = i, q = Request["q"], type = Request["type"] }))
				</ul>
			</div>*@
		<!-- end 分页 -->
	</div>
	<!-- end .box-footer -->
</div>
<!-- end .box -->
